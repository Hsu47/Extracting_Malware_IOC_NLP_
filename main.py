from ArticleClean import utils_preprocess_text
from Crawler import Crawler
from TFIDF import TfidfExtraction,ComparingMalwareFamily
from sklearn.feature_extraction.text import TfidfVectorizer,CountVectorizer
import os
from datetime import datetime
import pandas as pd
import numpy as np
from IOC import GetDomain,GetIP,GetCVE,GetHash
from ParsingXml import GetXmlIP,GetXmlHash,GetXmlDomain
from Crawler_Uscert import CrawlUscert
Uscert = 0
Malwarebytes = 1
def GetMalwarebytes():
    print('[INFO]Start getting Malwarebytes')
    hours = datetime.today().hour
    day = datetime.today().day
    month = datetime.today().month
    df = Crawler() ##文辭清洗已完成
    return 0
    df = TfidfExtraction(df)
    df_Malware = ComparingMalwareFamily(df)
    print('[INFO]Pasing IOCs start')
    df_Malware = GetIP(df_Malware,Malwarebytes) ##以malwarebytes的css解析
    df_Malware = GetCVE(df_Malware,Malwarebytes)
    df_Malware = GetHash(df_Malware,Malwarebytes)
    df_Malware = GetDomain(df_Malware,Malwarebytes)
    print('[INFO]Pasing IOCs done')
    df_Malware.to_excel(f'./{month}_{day}_{hours}_Malwarebytes.xlsx')
    print('[INFO]Output Malwarebytes done')

def GetUscert():
    print('[INFO]Start getting Uscert')
    hours = datetime.today().hour
    day = datetime.today().day
    month = datetime.today().month
    df = CrawlUscert()
    df = TfidfExtraction(df)
    df_Malware = ComparingMalwareFamily(df)
    print('[INFO]Pasing IOCs start')
    df_Malware = GetIP(df_Malware,Uscert) ##Uscert的css解析
    df_Malware = GetCVE(df_Malware,Uscert)
    df_Malware = GetHash(df_Malware,Uscert)
    df_Malware = GetDomain(df_Malware,Uscert)

    print('[INFO]Pasing IOCs done')
    df_Malware.to_excel(f'./{month}_{day}_{hours}_Uscert.xlsx')
    print('[INFO]Output Uscert done')



def main():
    GetMalwarebytes()
    GetUscert()

if __name__ == '__main__':
    main()
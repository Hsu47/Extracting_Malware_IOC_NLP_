# Malware family scratching (including a.k.a)
from selenium import webdriver
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from datetime import datetime
import os
import requests
import pandas as pd
import numpy as np
from bs4 import BeautifulSoup

def IsMalwareFamily(string,dicFamily): ##找不到回傳-1,找到的話回傳第幾個家族
    for i in range(len(dicFamily)):
        if string in dicFamily[i]:
            return i
    return -1

def GetMalwareFamily():

    ## 抓取Family name
    dicFamily = []
    url = "https://malpedia.caad.fkie.fraunhofer.de/families" ##惡意軟體家族字典來源網站
    r = requests.get(url)
    soup = BeautifulSoup(r.text,"html.parser")
    sel = soup.select(".common_name") ##css選擇器
    for s in sel:
        dicFamily.append([s.text.strip().lower()]) ##轉小寫

    ## 抓取AKA name

    akaFamily = []
    akaIndex =[]
    index = 0
    url = "https://malpedia.caad.fkie.fraunhofer.de/families"
    r = requests.get(url)
    soup = BeautifulSoup(r.text,"html.parser")
    sel = soup.select(".alt_names") ##css選擇器
    for s in sel:
        if s.text!= '[]':
            akaIndex.append(index)
            akaFamily.append(s.text[1:-1].split(', '))
        index += 1

    ## 清洗格式，aka name e.g. u'404keylogger' -> 404keylogger

    for i in range(len(akaFamily)):
        for j in range(len(akaFamily[i])):
            akaFamily[i][j] = akaFamily[i][j][2:-1].lower()

    ## 將aka name新增進去family name
    for i,v in enumerate(akaIndex):
        dicFamily[v].extend(akaFamily[i])
    day = datetime.today().day
    month = datetime.today().month
    #dicFamily.to_csv(f'{month}_{day}MalwareFamily.csv')
    return dicFamily